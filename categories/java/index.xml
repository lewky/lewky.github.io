<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Java - 分类 - Yulin Lewis' Blog</title><link>https://lewky.cn/categories/java/</link><description>Java - 分类 - Yulin Lewis' Blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>1019175915@qq.com (雨临Lewis)</managingEditor><webMaster>1019175915@qq.com (雨临Lewis)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 01 Jun 2021 23:30:42 +0800</lastBuildDate><atom:link href="https://lewky.cn/categories/java/" rel="self" type="application/rss+xml"/><item><title>Java - 数据结构之树</title><link>https://lewky.cn/posts/java-tree.html/</link><pubDate>Tue, 01 Jun 2021 23:30:42 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-tree.html/</guid><description><![CDATA[<h2 id="基本概念">基本概念</h2>
<p>树（Tree）不是线性表，而是一种描述非线性层次关系的数据结构，描述的是一对多的数据结构。</p>
<p>● 结点：Node，有的资料也叫做节点。<br>
● 根结点（Root）：没有父结点的结点，一棵树只能有一个根结点。<br>
● 兄弟结点（Siblings）：拥有同一个父结点的结点，它们是父结点的子结点。<br>
● 孩子、双亲（Child、Parent）：结点的子树的根称为该结点的孩子，相应地，该结点称为孩子的双亲。<br>
● 结点的度（Degree）：一个结点所包含的子树的数量，即子结点的数量。<br>
● 树的度：该树所有结点中最大的度。<br>
● 叶子结点（Leaf）：树中度为零的结点，也叫终端结点。<br>
● 分支（Branch）：至少有一个孩子的结点，也叫非终端结点。<br>
● 祖先（Ancestor）：结点的祖先是从根到该结点所经分支上的所有结点。<br>
● 后代（Descendant）：以某结点为根的子树中的任一结点都称为该结点的后代。<br>
● 边（Edge）：一个结点和另一个结点之间的连接被称为边。<br>
● 路径（Path）：连接结点和其后代的结点之间的（结点，边）的序列<br>
● 层次（Level）：从根结点开始算，根结点是第一层，依次往下。（也可以把根结点作为第0层）<br>
● 结点的高度（Height of node）：该结点和某个叶子之间存在的最长路径上的边的个数。<br>
● 树的高度（Height of tree）：树的高度是其根结点的高度。<br>
● 结点的深度（Depth of node）：从树的根结点到该结点的边的个数。**和高度的区别在于，深度是从根结点开始往下到自身结点；高度是从自身结点往下到叶子结点。**<br>
● 树的深度（Depth of tree）：树中结点的最大层次。树的高度等于树的深度。<br>
● 无序树：树中任意结点的子结点之间没有顺序关系，这种树称为无序树，也称为自由树。<br>
● 有序树：树中各结点的子结点之间从左到右按一定次序排列的树。<br>
● 森林：n(n&gt;=0)棵互不相交的树的集合。</p>]]></description></item><item><title>Java - 泛型</title><link>https://lewky.cn/posts/java-generic.html/</link><pubDate>Mon, 24 May 2021 23:35:36 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-generic.html/</guid><description><![CDATA[<h2 id="泛型generic">泛型（Generic）</h2>
<p>泛型：把类型明确的工作推迟到创建对象或调用方法时再明确的特殊类型。</p>
<p>参数化类型：把类型当作参数来传递，这意味着参数化类型不能是基本数据类型，需要用对应的包装类来代替。</p>
<p>相关概念：</p>]]></description></item><item><title>Java日期问题汇总</title><link>https://lewky.cn/posts/java-date-issues.html/</link><pubDate>Mon, 25 Jan 2021 23:43:02 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-date-issues.html/</guid><description><![CDATA[<h2 id="日期格式化的跨年问题">日期格式化的跨年问题</h2>
<p>通常格式化日期时，都是使用的<code>YYYY/MM/dd</code>来格式化日期，但是在遇到跨年日期时，就会遇到很神奇的现象，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">final</span> <span class="n">Calendar</span> <span class="n">calendar</span> <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
<span class="c1">// 2020-12-26
</span><span class="c1"></span><span class="n">calendar</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">2020</span><span class="o">,</span> <span class="n">11</span><span class="o">,</span> <span class="n">26</span><span class="o">);</span>
<span class="kd">final</span> <span class="n">Date</span> <span class="n">date1226</span> <span class="o">=</span> <span class="n">calendar</span><span class="o">.</span><span class="na">getTime</span><span class="o">();</span>
<span class="c1">// 2020-12-27
</span><span class="c1"></span><span class="n">calendar</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">2020</span><span class="o">,</span> <span class="n">11</span><span class="o">,</span> <span class="n">27</span><span class="o">);</span>
<span class="kd">final</span> <span class="n">Date</span> <span class="n">date1227</span> <span class="o">=</span> <span class="n">calendar</span><span class="o">.</span><span class="na">getTime</span><span class="o">();</span>
<span class="c1">// YYYY
</span><span class="c1"></span><span class="kd">final</span> <span class="n">DateFormat</span> <span class="n">Y</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&#34;YYYY/MM/dd&#34;</span><span class="o">);</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;2020-12-26用YYYY/MM/dd表示:&#34;</span> <span class="o">+</span> <span class="n">Y</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">date1226</span><span class="o">));</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;2020-12-27用YYYY/MM/dd表示:&#34;</span> <span class="o">+</span> <span class="n">Y</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">date1227</span><span class="o">));</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Java的远程调试Remote Debug</title><link>https://lewky.cn/posts/java-remote-debug.html/</link><pubDate>Tue, 17 Mar 2020 23:30:40 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-remote-debug.html/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>一般开发项目时可以直接本地借助IDE工具进行debug调试，但对于线上的项目，则需要借助Java提供的远程debug功能来进行调试。可以在启动项目前通过配置对应的JVM参数来启用远程debug，也可以把参数添加到Tomcat或者Jetty之类的启动脚本里。</p>
<h2 id="配置jvm参数">配置JVM参数</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=n
</code></pre></td></tr></table>
</div>
</div><p>参数说明：</p>]]></description></item><item><title>JDK自带的那些好用的工具</title><link>https://lewky.cn/posts/jdk-tools.html/</link><pubDate>Fri, 03 Jan 2020 14:59:39 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/jdk-tools.html/</guid><description>将中文转换为ASCII码的工具 在jdk的安装目录下，有一个bin文件夹，这里隐藏了一个将中文转换为ASCII码的工具：native2ascii.exe。双击运行该程序，输入要转换的中文，按下Enter，就可以得到相应的ASCII码了。 接下来要如何将该ASCII码复制到文本上？ 右键cmd窗口，选择编辑菜单里的标记，选定了要复制的内容后按下Enter就自动复制到</description></item><item><title>StringUtils.split()和string.split()的区别</title><link>https://lewky.cn/posts/44d23f55.html/</link><pubDate>Tue, 09 Apr 2019 23:22:13 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/44d23f55.html/</guid><description><![CDATA[<h2 id="场景">场景</h2>
<p>出于业务考虑，将多个字符串拼接起来时，使用的分隔符是<code>;,;</code>。如果要将这样一个拼接来的字符串分割成原本的多个字符串时，就需要使用到jdk自带的split()方法。不过因为公司的编程规范，改为使用了Apache工具类的StringUtils.split()。</p>
<p>之后就发现，当被拼接的字符串里含有<code>;</code>或<code>,</code>时，就会出现分割不正确的问题。</p>]]></description></item><item><title>Java反编译工具JD-GUI以及Eclipse的反编译插件</title><link>https://lewky.cn/posts/add9b646.html/</link><pubDate>Mon, 10 Dec 2018 00:27:11 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/add9b646.html/</guid><description><![CDATA[<h2 id="什么是反编译">什么是反编译</h2>
<blockquote>
<p>高级语言源程序经过编译变成可执行文件，反编译就是逆过程。但是通常不能把可执行文件变成高级语言源代码，只能转换成汇编程序。</p>
</blockquote>]]></description></item><item><title>Java - 怎么通过环境变量来切换jdk版本</title><link>https://lewky.cn/posts/java-%E6%80%8E%E4%B9%88%E9%80%9A%E8%BF%87%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E6%9D%A5%E5%88%87%E6%8D%A2jdk%E7%89%88%E6%9C%AC.html/</link><pubDate>Sat, 17 Nov 2018 00:10:44 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-%E6%80%8E%E4%B9%88%E9%80%9A%E8%BF%87%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E6%9D%A5%E5%88%87%E6%8D%A2jdk%E7%89%88%E6%9C%AC.html/</guid><description><![CDATA[问题与分析 我在本地安装了1.7和1.8两个版本的jdk，此时我的JAVA_HOME环境变量配置的是jdk1.8，在cmd窗口输入java -version发现报错如下： 1 2 3 4 5 C:\Users\Lewis&gt;java -version Error: Registry key &#39;Software\JavaSoft\Java Runtime Environment&#39;\CurrentVersion&#39; has value &#39;1.8&#39;, but &#39;1.7&#39; is required. Error: could not find java.dll Error: Could not find Java SE Runtime Environment. 接着输入javac -version则是正常： 1 2 C:\Users\Lewis&gt;javac -version javac 1.8.0_191 javac命令能正常执行， 说明我配置的CLASSPATH变量和JAVA_]]></description></item><item><title>Java - 安装jdk并设置环境变量</title><link>https://lewky.cn/posts/4c4c677.html/</link><pubDate>Sat, 17 Nov 2018 00:09:31 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/4c4c677.html/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>双十一买了台新的笔记本，需要重新安装下Java，这里记录下安装的过程，毕竟万事开头难，就算是老手也不一定能一次就把Java安装成功。</p>
<h2 id="安装jdk">安装jdk</h2>
<p>作为一名Java开发，当然是要安装jdk了，如果只是需要Java的运行环境，那么安装jre就足够了。另外说下，jdk里以及包含了jre了。</p>
<p>首先去<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener noreffer">官网</a>下载Java，由于Sun被Oracle收购了，现在去官网下载Java需要先注册一个Oracle账号，虽然麻烦了点，但是没办法，谁叫Oracle牛逼呢。</p>
<p>由于页面是全英文的，部分同学可能会懵逼，其实没什么，随便找一个版本下载就行。唯一需要注意的是，下载文件之前要先点击一下文件上方的同意协议，否则会提示你还没有同意协议。</p>]]></description></item><item><title>Java - Class版本号和UnsupportedClassVersionError</title><link>https://lewky.cn/posts/fd82a4a.html/</link><pubDate>Mon, 12 Nov 2018 22:11:35 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/fd82a4a.html/</guid><description><![CDATA[<h2 id="问题分析">问题分析</h2>
<p>Java是向下兼容的，每一个jdk版本都有对应的class版本号(major + minor version numbers)；如果用低版本的jvm去加载高版本jdk编译的类，就会报错：<code>java.lang.UnsupportedClassVersionError</code></p>]]></description></item></channel></rss>