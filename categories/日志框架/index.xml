<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>日志框架 - 分类 - Yulin Lewis' Blog</title><link>https://lewky233.top/categories/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/</link><description>日志框架 - 分类 - Yulin Lewis' Blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>1019175915@qq.com (雨临Lewis)</managingEditor><webMaster>1019175915@qq.com (雨临Lewis)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 09 Sep 2021 23:44:02 +0800</lastBuildDate><atom:link href="https://lewky233.top/categories/%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/" rel="self" type="application/rss+xml"/><item><title>日志框架与门面模式</title><link>https://lewky233.top/posts/log-framework/</link><pubDate>Thu, 09 Sep 2021 23:44:02 +0800</pubDate><author>文章作者</author><guid>https://lewky233.top/posts/log-framework/</guid><description><![CDATA[<h2 id="日志框架">日志框架</h2>
<p>目前的日志框架可以分为两种：一种是jdk自带的，一种是第三方实现的。</p>
<p>第三方的日志框架除了提供具体的日志实现外，也有的会提供自身框架的接口。此外，有些日志框架仅仅提供了一套统一的接口，不包含具体的日志实现，可以通过一些桥接包来调用其他的日志框架。（即日志的门面模式）</p>]]></description></item><item><title>Log4j、Log4j2问题汇总</title><link>https://lewky233.top/posts/log4j2-issues/</link><pubDate>Sat, 07 Aug 2021 23:23:54 +0800</pubDate><author>文章作者</author><guid>https://lewky233.top/posts/log4j2-issues/</guid><description><![CDATA[<h2 id="isdebugenabled的作用"><code>isDebugEnabled()</code>的作用</h2>
<p>查看公司项目的代码，发现在打印日志的时候会先进行一次判断，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-java" data-lang="java"><span class="line"><span class="cl"><span class="k">if</span> <span class="o">(</span><span class="n">LOGGER</span><span class="o">.</span><span class="na">isDebugEnabled</span><span class="o">())</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">LOGGER</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">&#34;Search parameters: &#34;</span> <span class="o">+</span> <span class="n">searchParams</span><span class="o">);</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Log4j2 - 动态生成Appender</title><link>https://lewky233.top/posts/8dc44b45.html/</link><pubDate>Thu, 03 Jan 2019 21:39:59 +0800</pubDate><author>文章作者</author><guid>https://lewky233.top/posts/8dc44b45.html/</guid><description><![CDATA[<h2 id="功能需求">功能需求</h2>
<p>项目里将User分成了各个区域(domain)，这些domain有个标志domainId，现在要求在打印日志的时候，不仅将所有User的日志都打印到日志文件<code>logs/CNTCore.log</code>中，还需要另外再打印到对应domain的日志文件<code>logs/{domainId}/CNTCore.log</code>。</p>
<p>比如User A的domainId是<code>RD2</code>，那么除了<code>logs/CNTCore.log</code>外，还需要将该User A的日志额外打印到<code>logs/RD2/CNTCore.log</code>中。</p>
<h2 id="实现思路">实现思路</h2>
<p>将所有User的日志都打印到日志文件<code>logs/CNTCore.log</code>中，这个可以直接使用配置文件<code>log4j2.xml</code>来解决，一个简单的配置如下：</p>]]></description></item><item><title>Log4j和Log4j2怎么动态加载配置文件</title><link>https://lewky233.top/posts/2c65baa3.html/</link><pubDate>Fri, 28 Dec 2018 00:34:44 +0800</pubDate><author>文章作者</author><guid>https://lewky233.top/posts/2c65baa3.html/</guid><description>&lt;h2 id="应用场景与问题">应用场景与问题&lt;/h2>
&lt;p>当项目在运行时，我们如果需要修改log4j 1.X或者log4j2的配置文件，一般来说我们是不能直接将项目停止运行再来修改文件重新部署的。于是就有这样一个问题：如何在不停止当前项目的运行的情况下，让系统能够自动地监控配置文件的修改状况，从而实现动态加载配置文件的功能？而log4j 1.X和log4j2的差别略大，各自应该怎么实现这个功能？&lt;/p></description></item><item><title>Log4j2中LevelRangeFilter的注意点</title><link>https://lewky233.top/posts/f53d27da.html/</link><pubDate>Sat, 22 Dec 2018 23:11:12 +0800</pubDate><author>文章作者</author><guid>https://lewky233.top/posts/f53d27da.html/</guid><description><![CDATA[<h2 id="levelrangefilter的注意点">LevelRangeFilter的注意点</h2>
<p>在log4j2中，LevelRangeFilter的minLevel，maxLevel的配置是和log4j 1.x相反的；minLevel需要配置的是高级别，maxLevel配置的是低级别，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl"><span class="nt">&lt;LevelRangeFilter</span> <span class="na">minLevel=</span><span class="s">&#34;fatal&#34;</span> <span class="na">maxLevel=</span><span class="s">&#34;info&#34;</span> <span class="na">onMatch=</span><span class="s">&#34;ACCEPT&#34;</span> <span class="na">onMismatch=</span><span class="s">&#34;DENY&#34;</span><span class="nt">/&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>如上边的配置，是打印info到fatal级别的log，<strong>如果配置反过来，则不会输出任何log。</strong></p>
<p>如果不配置minLevel、maxLevel、onMatch和onMismatch的值，则会为其设置默认值，在LevelRangeFilter中的源码实现如下：</p>]]></description></item><item><title>Log4j.xml中Filter的用法</title><link>https://lewky233.top/posts/ec168d9b.html/</link><pubDate>Thu, 20 Dec 2018 22:33:54 +0800</pubDate><author>文章作者</author><guid>https://lewky233.top/posts/ec168d9b.html/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>log4j中常用的Filter分为四种：DenyAllFilter、LevelMatchFilter、LevelRangeFilter、StringMatchFilter。</p>
<p>当appender匹配了某个Filter的时候，就不会继续匹配下一个filter，所以当需要配置多个filter时需要注意先后顺序，这样才能实现需要的效果。</p>
<p>这些filter有个共同的属性<code>AcceptOnMatch</code>，用来控制匹配到的appender是否打印日志。</p>]]></description></item></channel></rss>