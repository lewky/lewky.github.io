<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - Yulin Lewis' Blog</title><link>https://lewky.cn/posts/</link><description>所有文章 | Yulin Lewis' Blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>1019175915@qq.com (雨临Lewis)</managingEditor><webMaster>1019175915@qq.com (雨临Lewis)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 06 Aug 2021 22:41:57 +0800</lastBuildDate><atom:link href="https://lewky.cn/posts/" rel="self" type="application/rss+xml"/><item><title>IDEA问题汇总</title><link>https://lewky.cn/posts/idea-issues/</link><pubDate>Fri, 06 Aug 2021 22:41:57 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/idea-issues/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本文基于2021-2版本的IDEA。</p>
<h2 id="启动时选择工作空间">启动时选择工作空间</h2>
<p><code>File</code> -&gt; <code>Settings...</code> -&gt; <code>Appearance &amp; Behavior</code> -&gt; <code>System Settings</code> -&gt; 不勾选<code>Reopen projects on startup</code></p>
<h2 id="无法搜索或者下载插件">无法搜索或者下载插件</h2>
<p><code>File</code> -&gt; <code>Settings...</code> -&gt; <code>Plugins</code>可以打开插件市场，搜索想要下载的插件，但是可能由于网络问题而无法成功搜索或者下载插件。此时需要设置代理来解决。</p>]]></description></item><item><title>博客园SimpleMemory皮肤定制化</title><link>https://lewky.cn/posts/cnblogs-skin/</link><pubDate>Thu, 05 Aug 2021 22:44:17 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/cnblogs-skin/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>博客园支持皮肤的高度定制化，本文主要简单介绍下博客园的SimpleMemory皮肤的定制化。感谢皮肤作者以及定制化皮肤的作者！</p>
<p>个人使用的是<code>BNDong</code>大大开源的基于SimpleMemory原皮的定制化皮肤，下面是相关的一些链接。</p>
<ul>
<li>项目地址：https://github.com/BNDong/Cnblogs-Theme-SimpleMemory</li>
<li>文档地址：https://bndong.github.io/Cnblogs-Theme-SimpleMemory/v2/#/</li>
<li>原作者：https://www.cnblogs.com/bndong/</li>
</ul>]]></description></item><item><title>npm问题汇总</title><link>https://lewky.cn/posts/npm-issues/</link><pubDate>Wed, 04 Aug 2021 22:51:39 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/npm-issues/</guid><description><![CDATA[<h2 id="修改npm全局安装的路径">修改npm全局安装的路径</h2>
<p>在cmd输入命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cmd" data-lang="cmd">npm config set prefix <span class="s2">&#34;D:\software\nodejs\node_global&#34;</span>
npm config set cache <span class="s2">&#34;D:\software\nodejs\node_cache&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p>之后可以执行<code>npm config ls</code>来查看是否设置成功了。</p>
<p>为了方便全局安装的模块能通过命令行来运行，可以将上述设置的两个路径添加到环境变量<code>PATH</code>中。</p>]]></description></item><item><title>Maven问题汇总</title><link>https://lewky.cn/posts/maven-issues/</link><pubDate>Thu, 29 Jul 2021 23:19:56 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/maven-issues/</guid><description><![CDATA[<h2 id="设置阿里云国内镜像">设置阿里云国内镜像</h2>
<p>从Maven的中央仓库下载jar包速度很慢，可以通过在<code>settings.xml</code>中配置一个国内镜像来提高下载速度，一般用阿里云镜像。<strong>注意，如果你同时有多个配置文件，必须要修改当前用户目录下的<code>~/.m2</code>下的<code>settings.xml</code>才有效。</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml"><span class="nt">&lt;mirrors&gt;</span>  
    <span class="nt">&lt;mirror&gt;</span>  
        <span class="nt">&lt;id&gt;</span>alimaven<span class="nt">&lt;/id&gt;</span>  
        <span class="nt">&lt;name&gt;</span>aliyun maven<span class="nt">&lt;/name&gt;</span>  
        <span class="nt">&lt;url&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="nt">&lt;/url&gt;</span>  
        <span class="nt">&lt;mirrorOf&gt;</span>central<span class="nt">&lt;/mirrorOf&gt;</span>          
    <span class="nt">&lt;/mirror&gt;</span>  
<span class="nt">&lt;/mirrors&gt;</span> 
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Swagger问题汇总</title><link>https://lewky.cn/posts/swagger-issues/</link><pubDate>Fri, 09 Jul 2021 23:49:08 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/swagger-issues/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>SpringFox是一个开源的用于生成API文档接口的框架，支持多种API文档的格式。可以用SpringFox来整合Spring和Swagger，本文使用的Swagger和SpringFox版本如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">io</span><span class="o">.</span><span class="na">springfox</span><span class="o">&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">springfox</span><span class="o">-</span><span class="n">swagger2</span><span class="o">&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">version</span><span class="o">&gt;</span><span class="n">2</span><span class="o">.</span><span class="na">9</span><span class="o">.</span><span class="na">2</span><span class="o">&lt;/</span><span class="n">version</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="n">dependency</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">groupId</span><span class="o">&gt;</span><span class="n">io</span><span class="o">.</span><span class="na">springfox</span><span class="o">&lt;/</span><span class="n">groupId</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">artifactId</span><span class="o">&gt;</span><span class="n">springfox</span><span class="o">-</span><span class="n">swagger</span><span class="o">-</span><span class="n">ui</span><span class="o">&lt;/</span><span class="n">artifactId</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="n">version</span><span class="o">&gt;</span><span class="n">2</span><span class="o">.</span><span class="na">9</span><span class="o">.</span><span class="na">2</span><span class="o">&lt;/</span><span class="n">version</span><span class="o">&gt;</span>
<span class="o">&lt;/</span><span class="n">dependency</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Java - 数据结构之树</title><link>https://lewky.cn/posts/java-tree.html/</link><pubDate>Tue, 01 Jun 2021 23:30:42 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-tree.html/</guid><description><![CDATA[<h2 id="基本概念">基本概念</h2>
<p>树（Tree）不是线性表，而是一种描述非线性层次关系的数据结构，描述的是一对多的数据结构。</p>
<p>● 结点：Node，有的资料也叫做节点。<br>
● 根结点（Root）：没有父结点的结点，一棵树只能有一个根结点。<br>
● 兄弟结点（Siblings）：拥有同一个父结点的结点，它们是父结点的子结点。<br>
● 孩子、双亲（Child、Parent）：结点的子树的根称为该结点的孩子，相应地，该结点称为孩子的双亲。<br>
● 结点的度（Degree）：一个结点所包含的子树的数量，即子结点的数量。<br>
● 树的度：该树所有结点中最大的度。<br>
● 叶子结点（Leaf）：树中度为零的结点，也叫终端结点。<br>
● 分支（Branch）：至少有一个孩子的结点，也叫非终端结点。<br>
● 祖先（Ancestor）：结点的祖先是从根到该结点所经分支上的所有结点。<br>
● 后代（Descendant）：以某结点为根的子树中的任一结点都称为该结点的后代。<br>
● 边（Edge）：一个结点和另一个结点之间的连接被称为边。<br>
● 路径（Path）：连接结点和其后代的结点之间的（结点，边）的序列<br>
● 层次（Level）：从根结点开始算，根结点是第一层，依次往下。（也可以把根结点作为第0层）<br>
● 结点的高度（Height of node）：该结点和某个叶子之间存在的最长路径上的边的个数。<br>
● 树的高度（Height of tree）：树的高度是其根结点的高度。<br>
● 结点的深度（Depth of node）：从树的根结点到该结点的边的个数。**和高度的区别在于，深度是从根结点开始往下到自身结点；高度是从自身结点往下到叶子结点。**<br>
● 树的深度（Depth of tree）：树中结点的最大层次。树的高度等于树的深度。<br>
● 无序树：树中任意结点的子结点之间没有顺序关系，这种树称为无序树，也称为自由树。<br>
● 有序树：树中各结点的子结点之间从左到右按一定次序排列的树。<br>
● 森林：n(n&gt;=0)棵互不相交的树的集合。</p>]]></description></item><item><title>Hexo系列(2.1) - NexT主题美化与博客功能增强 · 第二章</title><link>https://lewky.cn/posts/hexo-2.1.html/</link><pubDate>Sat, 29 May 2021 23:37:24 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/hexo-2.1.html/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>网上有不少相关的帖子，不过版本会比较旧，而不同版本可能存在代码不同的问题，不过大部分还是大同小异，本系列就不啰嗦重复了，基本只会按照本人所使用的版本以及个人所使用到的内容来进行介绍。</p>
<p>该系列是对我所使用的Next主题进行个性化定制，涉及到js和css等的修改，还有各种插件的使用，包括使用过程中的一些踩坑记录；另外也会对Next主题进行一些写作技巧的介绍与运用，希望能对大家有所帮助。有疑问的朋友可以给我留言，我会尽可能回复<code>O(∩_∩)O</code>。</p>]]></description></item><item><title>Hugo系列(3.2) - LoveIt主题美化与博客功能增强 · 第三章</title><link>https://lewky.cn/posts/hugo-3.2.html/</link><pubDate>Sat, 29 May 2021 14:11:16 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/hugo-3.2.html/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本博客使用的是Hugo的LoveIt主题，本文也是基于该主题而写的，不过Hugo的美化步骤应该大同小异，版本如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">hexo: 3.8.0

hugo: v0.74.2/extended windows/amd64 BuildDate: unknown

LoveIt: v0.2.10
</code></pre></td></tr></table>
</div>
</div><p><strong>请注意，本文的所有功能都离不开两个新增加的文件：<code>_custom.scss</code>和<code>custom.js</code>，部分功能还需要<code>jquery</code>，在第一章中会提及如何引入。</strong></p>
<p>另外本文篇幅太长，阅读体验不好，将其进行分章如下：</p>
<ul>
<li><a href="/posts/hugo-3.html/" rel="">Hugo系列(3.0) - LoveIt主题美化与博客功能增强 · 第一章</a></li>
<li><a href="/posts/hugo-3.1.html/" rel="">Hugo系列(3.1) - LoveIt主题美化与博客功能增强 · 第二章</a></li>
<li><a href="/posts/hugo-3.2.html/" rel="">Hugo系列(3.2) - LoveIt主题美化与博客功能增强 · 第三章</a></li>
</ul>]]></description></item><item><title>Hugo系列(3.1) - LoveIt主题美化与博客功能增强 · 第二章</title><link>https://lewky.cn/posts/hugo-3.1.html/</link><pubDate>Sat, 29 May 2021 13:11:16 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/hugo-3.1.html/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本博客使用的是Hugo的LoveIt主题，本文也是基于该主题而写的，不过Hugo的美化步骤应该大同小异，版本如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">hexo: 3.8.0

hugo: v0.74.2/extended windows/amd64 BuildDate: unknown

LoveIt: v0.2.10
</code></pre></td></tr></table>
</div>
</div><p><strong>请注意，本文的所有功能都离不开两个新增加的文件：<code>_custom.scss</code>和<code>custom.js</code>，部分功能还需要<code>jquery</code>，在第一章中会提及如何引入。</strong></p>
<p>另外本文篇幅太长，阅读体验不好，将其进行分章如下：</p>
<ul>
<li><a href="/posts/hugo-3.html/" rel="">Hugo系列(3.0) - LoveIt主题美化与博客功能增强 · 第一章</a></li>
<li><a href="/posts/hugo-3.1.html/" rel="">Hugo系列(3.1) - LoveIt主题美化与博客功能增强 · 第二章</a></li>
<li><a href="/posts/hugo-3.2.html/" rel="">Hugo系列(3.2) - LoveIt主题美化与博客功能增强 · 第三章</a></li>
</ul>]]></description></item><item><title>Java - 泛型</title><link>https://lewky.cn/posts/java-generic.html/</link><pubDate>Mon, 24 May 2021 23:35:36 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-generic.html/</guid><description><![CDATA[<h2 id="泛型generic">泛型（Generic）</h2>
<p>泛型：把类型明确的工作推迟到创建对象或调用方法时再明确的特殊类型。</p>
<p>参数化类型：把类型当作参数来传递，这意味着参数化类型不能是基本数据类型，需要用对应的包装类来代替。</p>
<p>相关概念：</p>]]></description></item></channel></rss>