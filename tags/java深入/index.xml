<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Java深入 - 标签 - Yulin Lewis' Blog</title><link>https://lewky.cn/tags/java%E6%B7%B1%E5%85%A5/</link><description>Java深入 - 标签 - Yulin Lewis' Blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>1019175915@qq.com (雨临Lewis)</managingEditor><webMaster>1019175915@qq.com (雨临Lewis)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 28 Oct 2020 15:52:05 +0800</lastBuildDate><atom:link href="https://lewky.cn/tags/java%E6%B7%B1%E5%85%A5/" rel="self" type="application/rss+xml"/><item><title>Java深入系列(0) - 基础汇总</title><link>https://lewky.cn/posts/java-deepgoing-0.html/</link><pubDate>Wed, 28 Oct 2020 15:52:05 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-deepgoing-0.html/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本文主要汇总Java深入学习过程中遇到的一些不好归类的基础问题。</p>
<h2 id="方法重载">方法重载</h2>
<h3 id="什么是方法重载为什么不能根据返回类型来区分重载">什么是方法重载？为什么不能根据返回类型来区分重载？</h3>
<p>方法的重载和重写都是实现多态的方式，区别在于前者实现的是编译时的多态性，而后者实现的是运行时的多态性。</p>
<p>重载发生在一个类中，同名的方法如果有不同的参数列表（参数类型不同、参数个数不同或者二者都不同）则视为重载。为什么这里不包括返回类型呢？很简单，如果只是返回类型不同，是无法区分开来的，如下：</p>]]></description></item></channel></rss>