<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Java - 标签 - Yulin Lewis' Blog</title><link>https://lewky.cn/tags/java/</link><description>Java - 标签 - Yulin Lewis' Blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>1019175915@qq.com (雨临Lewis)</managingEditor><webMaster>1019175915@qq.com (雨临Lewis)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 15 Dec 2020 22:52:09 +0800</lastBuildDate><atom:link href="https://lewky.cn/tags/java/" rel="self" type="application/rss+xml"/><item><title>Java - 三元运算符隐含的坑</title><link>https://lewky.cn/posts/java-tertiary-operator.html/</link><pubDate>Tue, 15 Dec 2020 22:52:09 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-tertiary-operator.html/</guid><description><![CDATA[<h2 id="背景">背景</h2>
<p>某天发现系统报空指针异常，追踪异常栈后发现源头处是一个非常简单的三元表达式，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="n">Integer</span> <span class="n">age</span> <span class="o">=</span> <span class="n">user</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="n">user</span><span class="o">.</span><span class="na">getAge</span><span class="o">()</span> <span class="o">:</span> <span class="n">0</span><span class="o">;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Java - String的intern方法</title><link>https://lewky.cn/posts/java-intern.html/</link><pubDate>Wed, 28 Oct 2020 23:42:55 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-intern.html/</guid><description><![CDATA[<h2 id="stringintern">String#intern()</h2>
<p>String#intern()是一个本地方法，用来将字符串放入常量池，在不同的jdk有不同的实现区别：</p>
<ul>
<li>在jdk1.6及以前：当字符串在常量池存在时，则返回常量池中的字符串；当字符串在常量池不存在时，则<strong>在常量池中拷贝一份</strong>，然后再返回常量池中的字符串。</li>
</ul>]]></description></item><item><title>[转载]Java - 为什么不能根据返回类型来区分重载</title><link>https://lewky.cn/posts/java-overload.html/</link><pubDate>Wed, 28 Oct 2020 15:52:05 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-overload.html/</guid><description><![CDATA[<h2 id="什么是方法重载为什么不能根据返回类型来区分重载">什么是方法重载？为什么不能根据返回类型来区分重载？</h2>
<p>方法的重载和重写都是实现多态的方式，区别在于前者实现的是编译时的多态性，而后者实现的是运行时的多态性。</p>
<p>重载发生在一个类中，同名的方法如果有不同的参数列表（参数类型不同、参数个数不同或者二者都不同）则视为重载。为什么这里不包括返回类型呢？很简单，如果只是返回类型不同，是无法区分开来的，如下：</p>]]></description></item><item><title>[转载]Java - 为什么switch不支持long</title><link>https://lewky.cn/posts/java-switch.html/</link><pubDate>Tue, 27 Oct 2020 23:18:37 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-switch.html/</guid><description><![CDATA[<h2 id="switch-支持的类型">switch 支持的类型</h2>
<p>在 Java 语言规范里中，有说明 switch 支持的类型有：char、byte、short、int、Character、Byte、Short、Integer、String、enum。</p>
<h2 id="为什么不支持-long-">为什么不支持 long ？</h2>
<p>为什么只支持上面几种？int、String 都可以，为什么不支持 long ？</p>]]></description></item><item><title>JDK自带的那些好用的工具</title><link>https://lewky.cn/posts/jdk-tools.html/</link><pubDate>Fri, 03 Jan 2020 14:59:39 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/jdk-tools.html/</guid><description>将中文转换为ASCII码的工具 在jdk的安装目录下，有一个bin文件夹，这里隐藏了一个将中文转换为ASCII码的工具：native2ascii.exe。双击运行该程序，输入要转换的中文，按下Enter，就可以得到相应的ASCII码了。 接下来要如何将该ASCII码复制到文本上？ 右键cmd窗口，选择编辑菜单里的标记，选定了要复制的内容后按下Enter就自动复制到</description></item><item><title>由Java正则表达式的灾难性回溯引发的高CPU异常：java.util.regex.Pattern$Loop.match</title><link>https://lewky.cn/posts/af92ed86.html/</link><pubDate>Wed, 09 Oct 2019 20:11:45 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/af92ed86.html/</guid><description><![CDATA[<h2 id="问题与分析">问题与分析</h2>
<p>某天领导report了一个问题：线上的CPU自从上一个版本迭代后就一直处于居高不下的状况，领导看着这段时间的曲线图判断是有两条线程在不停的死循环。</p>
<p>接到任务后去查看了AWS的CloudWatch，发现线上CPU确实一直居高不下，使用率基本是之前的两倍；另外发现线程使用率以比之前频繁很多。后来公司的大佬拿到dump后经过分析发现，是由正则表达式造成的CPU持续高使用率的问题。</p>]]></description></item><item><title>LeetCode - 412. Fizz Buzz</title><link>https://lewky.cn/posts/37034d37.html/</link><pubDate>Fri, 07 Jun 2019 16:20:41 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/37034d37.html/</guid><description><![CDATA[<h2 id="题目">题目</h2>
<p>Write a program that outputs the string representation of numbers from 1 to n.</p>
<p>But for multiples of three it should output “Fizz” instead of the number and for the multiples of five output “Buzz”. For numbers which are multiples of both three and five output “FizzBuzz”.</p>]]></description></item><item><title>LeetCode - 136. Single Number</title><link>https://lewky.cn/posts/a517d260.html/</link><pubDate>Fri, 07 Jun 2019 16:11:45 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/a517d260.html/</guid><description><![CDATA[<h2 id="题目">题目</h2>
<p>Given a <strong>non-empty</strong> array of integers, every element appears twice except for one. Find that single one.</p>
<p><strong>Note:</strong></p>
<p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>]]></description></item><item><title>LeetCode - 344. Reverse String</title><link>https://lewky.cn/posts/7901a0f.html/</link><pubDate>Fri, 07 Jun 2019 15:52:01 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/7901a0f.html/</guid><description><![CDATA[<h2 id="题目">题目</h2>
<p>Write a function that reverses a string. The input string is given as an array of characters char[].</p>
<p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array in-place</strong> with O(1) extra memory.</p>]]></description></item><item><title>LeetCode - 709. To Lower Case</title><link>https://lewky.cn/posts/985dba49.html/</link><pubDate>Fri, 07 Jun 2019 15:36:36 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/985dba49.html/</guid><description><![CDATA[<h2 id="题目">题目</h2>
<p>Implement function ToLowerCase() that has a string parameter str, and returns the same string in lowercase.</p>
<p><strong>Example 1:</strong></p>]]></description></item></channel></rss>