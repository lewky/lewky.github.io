<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Yulin Lewis' Blog</title><link>https://lewky.cn/</link><description>不想当写手的码农不是好咸鱼_(xз」∠)_</description><generator>Hugo -- gohugo.io</generator><managingEditor>1019175915@qq.com (雨临Lewis)</managingEditor><webMaster>1019175915@qq.com (雨临Lewis)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 31 Mar 2022 19:51:26 +0800</lastBuildDate><atom:link href="https://lewky.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>IDEA - 快捷键篇</title><link>https://lewky.cn/posts/idea-hotkey/</link><pubDate>Thu, 31 Mar 2022 19:51:26 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/idea-hotkey/</guid><description><![CDATA[<h2 id="常用的快捷键">常用的快捷键</h2>
<p><code>shift shift</code> 连按两次<code>shift</code>键可以搜索文件，可以选择搜索范围。</p>
<p><code>ctrl + h</code> 查找一个类的继承关系树。</p>
<p><code>ctrl + d</code> 复制光标选中的文本。</p>
<p><code>ctrl + y</code> 删除光标选中的行。</p>
<p><code>ctrl + f</code> 在当前文件查找文本。</p>
<p><code>ctrl + shift + f</code> 所有文件中查找文本，不包括jar包里的文件。</p>
<p><code>ctrl + r</code> 在当前文件替换文本。</p>
<p><code>alt + ←</code> 跳转到文件栏左边的文件。</p>
<p><code>alt + →</code> 跳转到文件栏左边的文件。</p>
<p><code>alt + shift + ←</code> 跳转到上一步操作。</p>
<p><code>alt + shift + →</code> 跳转到下一步操作。</p>
<p><code>shift + enter</code> 在光标所在行的下一行创建一行空白行。</p>
<p><code>ctrl + /</code> 单行注释或多行注释或取消注释。</p>
<p><code>ctrl + f12</code> 查看当前类的所有方法，可以选择显示父类的方法。</p>
<p><code>ctrl + space</code> 基础代码补全。</p>]]></description></item><item><title>桌面窗口管理器占用内存过高</title><link>https://lewky.cn/posts/dwm-issues/</link><pubDate>Tue, 22 Mar 2022 08:20:42 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/dwm-issues/</guid><description>&lt;h2 id="桌面窗口管理器dwmexe内存泄漏">桌面窗口管理器（dwm.exe）内存泄漏&lt;/h2>
&lt;p>自从某天更新了Intel的核显驱动后，就发现电脑开机一段时间后必然发生卡顿，后来发现每次卡顿都是桌面窗口管理器（dwm.exe）占用内存过高。观察一段时间后发现，该进程内存会无限增加，怀疑发生了内存泄漏。在知乎搜索后发现很多人遇到了同款问题，这里记录下解决方法。&lt;/p></description></item><item><title>ELK系列(6) - Elasticsearch常用接口</title><link>https://lewky.cn/posts/elk-6/</link><pubDate>Mon, 21 Mar 2022 08:38:01 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/elk-6/</guid><description><![CDATA[<h2 id="创建索引">创建索引</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">// 创建blog索引，类型是_doc，id是1
curl -H &#39;Content-Type:application/json&#39; -XPUT http://localhost:9200/blog/_doc/1 -d &#39;
{
      &#34;id&#34;: &#34;1&#34;,
      &#34;title&#34;: &#34;New version of Elasticsearch released!&#34;,
      &#34;content&#34;: &#34;Version 1.0 released today!&#34;,
      &#34;priority&#34;: 10,
      &#34;tags&#34;: [&#34;announce&#34;, &#34;elasticsearch&#34;, &#34;release&#34;]
}&#39;

// 创建blog索引，类型是_doc，id由ES自己生成
// 该id长度为20个字符，URL安全，base64编码，GUID，分布式系统并行生成时不可能会发生冲突
curl -H &#39;Content-Type:application/json&#39; -XPOST http://localhost:9200/blog/_doc/ -d &#39;
{
      &#34;title&#34;: &#34;New version of Elasticsearch released!&#34;,
      &#34;content&#34;: &#34;Version 1.0 released today!&#34;,
      &#34;priority&#34;: 10,
      &#34;tags&#34;: [&#34;announce&#34;, &#34;elasticsearch&#34;, &#34;release&#34;]
}&#39;
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>ELK系列(5) - Elasticsearch性能调优</title><link>https://lewky.cn/posts/elk-5/</link><pubDate>Sat, 19 Mar 2022 22:27:05 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/elk-5/</guid><description><![CDATA[<h2 id="机器内存分配">机器内存分配</h2>
<p>官方推荐一个ES节点最好是分配当前机器最大内存的50%，比如机器内存是16g，就分配8g给ES：<code>-Xmx8g</code>。</p>
<p>剩下的8g内存并不是说就闲置了，ES会拿机器剩余的内存来优化自身的查询效率。也就是说，并不是一味将最大内存设置很大就是最优解。</p>]]></description></item><item><title>MyBatis问题汇总</title><link>https://lewky.cn/posts/mybatis-issues/</link><pubDate>Thu, 03 Mar 2022 23:10:33 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/mybatis-issues/</guid><description><![CDATA[<h2 id="使用domainobjectrenamingrule报错">使用domainObjectRenamingRule报错</h2>
<p>在使用MyBatis逆向工程时报错如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">org.mybatis.generator.exception.XMLParserException: XML Parser Error on line 43: 必须声明元素类型 &#34;domainObjectRenamingRule&#34;。
    at org.mybatis.generator.config.xml.ConfigurationParser.parseConfiguration(ConfigurationParser.java:121)
    at org.mybatis.generator.config.xml.ConfigurationParser.parseConfiguration(ConfigurationParser.java:82)
    at org.mybatis.generator.config.xml.ConfigurationParser.parseConfiguration(ConfigurationParser.java:74)
    at GeneratorSqlmap.generator(GeneratorSqlmap.java:22)
    at GeneratorSqlmap.main(GeneratorSqlmap.java:32)
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>PostgreSQL - SQL调优方案</title><link>https://lewky.cn/posts/postgresql-sql-tuning/</link><pubDate>Thu, 03 Mar 2022 08:09:26 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/postgresql-sql-tuning/</guid><description><![CDATA[<h2 id="查询执行很长时间的sql慢sql">查询执行很长时间的SQL（慢SQL）</h2>
<p>可以通过查询系统表来找到目前处于活跃状态的SQL：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-sql" data-lang="sql"><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">pg_stat_activity</span> <span class="k">WHERE</span> <span class="n">datname</span><span class="o">=</span><span class="s1">&#39;数据库名&#39;</span> 
<span class="k">and</span> <span class="n">client_addr</span> <span class="o">=</span> <span class="s1">&#39;发起查询的IP地址&#39;</span> <span class="k">order</span> <span class="k">by</span> <span class="n">state_change</span> <span class="k">desc</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Java - 字符编码</title><link>https://lewky.cn/posts/java-charset/</link><pubDate>Sun, 13 Feb 2022 10:42:08 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-charset/</guid><description>&lt;h2 id="字符集">字符集&lt;/h2>
&lt;p>字符集是一系列字符的集合，将每个收录的字符和数字进行映射。最早的字符集是ASCII，使用一个字节进行存储字符，8位一共可以表示256个字符，而ASCII只使用了其中的128位，即0～127位，这128位里面包括了常用的英文字符以及标点符号。&lt;/p></description></item><item><title>Spring Data Redis问题汇总</title><link>https://lewky.cn/posts/spring-data-redis/</link><pubDate>Thu, 13 Jan 2022 23:10:42 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/spring-data-redis/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本文基于以下版本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml"><span class="c">&lt;!--  对应的是3.3.0版本的jedis（redis的java客户端） --&gt;</span>
<span class="nt">&lt;dependency&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>org.springframework.boot<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>spring-boot-starter-data-redis<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>2.4.0<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Java数值问题汇总</title><link>https://lewky.cn/posts/java-number/</link><pubDate>Mon, 10 Jan 2022 23:03:06 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-number/</guid><description><![CDATA[<h2 id="double转成bigdecimal的精度损失问题">double转成BigDecimal的精度损失问题</h2>
<p>如果直接用构造方法将double数值转成BigDecimal，可能存在损失精度的问题：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">final</span> <span class="n">BigDecimal</span> <span class="n">b1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BigDecimal</span><span class="o">(</span><span class="n">0</span><span class="o">.</span><span class="na">48</span><span class="o">);</span>
<span class="kd">final</span> <span class="n">BigDecimal</span> <span class="n">b2</span> <span class="o">=</span> <span class="n">BigDecimal</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">0</span><span class="o">.</span><span class="na">48</span><span class="o">);</span>
<span class="c1">// 0.479999999999999982236431605997495353221893310546875
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b1</span><span class="o">);</span>
<span class="c1">// 0.48
</span><span class="c1"></span><span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b2</span><span class="o">);</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>lombok问题汇总</title><link>https://lewky.cn/posts/lombok-issues/</link><pubDate>Thu, 06 Jan 2022 09:01:30 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/lombok-issues/</guid><description><![CDATA[<h2 id="eclipse安装lombok插件">Eclipse安装lombok插件</h2>
<h3 id="方式一">方式一</h3>
<p>使用lombok框架开发可以减少大量重复性的代码，大大提高开发效率，但是Eclipse本身并不支持lombok，会编译报错。除了项目要导入lombok依赖，还需要为Eclipse安装该lombok插件。</p>
<p>安装方法很简单，找到你导入的lombok的jar包，双击运行该jar包，会出现一个安装界面。或者右键jar包，选择<code>打开方式</code>，接着选择<code>Java (TM) Platform SE binary</code>，会出现安装界面。</p>
<p>在安装界面选择当前的Eclipse进程，或者点击左下角的<code>Specify location...</code>选择你要安装插件的Eclipse，接着点右下角的<code>Install / Update</code>，很快就安装完毕，点击<code>Quit Installer</code>。</p>
<p>lombok的下载地址：https://projectlombok.org/downloads/lombok.jar</p>]]></description></item><item><title>Jackson问题汇总</title><link>https://lewky.cn/posts/jackson-issues/</link><pubDate>Tue, 04 Jan 2022 23:45:42 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/jackson-issues/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>常见的json框架有：Jackson，FasJson（阿里的，万年没更新，积累了大量issue），Gson（谷歌的）。其中Jackson效率最高，性能最好，最为常用。本文基于<code>2.11.3</code>版本的Jackson。</p>
<p>Jackson在1.x版本使用的包名是<code>codehaus</code>，后来升级到2.x版本时，为了和旧版本区分开来，采用了新的包名<code>fasterxml</code>。有这种类似操作的还有Log4j和Log4j2，在使用时需要注意引入的包名，避免混用版本或误用版本。</p>
<p>Jackson可以轻松的将Java对象转换成json对象和xml文档（即序列化），同样也可以将json、xml转换成Java对象（即反序列化）。</p>]]></description></item><item><title>Java Servlet问题汇总</title><link>https://lewky.cn/posts/javaweb-servlet-issues/</link><pubDate>Sat, 01 Jan 2022 23:16:47 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/javaweb-servlet-issues/</guid><description><![CDATA[<h2 id="cannot-forward-after-response-has-been-committe">Cannot forward after response has been committe</h2>
<p>之前在使用Servlet的时候，总是在 doGet()/doPost() 的最后一行才使用请求转发或者重定向。如果需要根据条件来判断进行不同的请求转发或者重定向，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="nd">@Override</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="kd">final</span> <span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="kd">final</span> <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span>
        <span class="kd">throws</span> <span class="n">ServletException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>

    <span class="k">if</span> <span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getSession</span><span class="o">().</span><span class="na">getAttribute</span><span class="o">(</span><span class="n">AttrConsts</span><span class="o">.</span><span class="na">LOGIN_USER</span><span class="o">)</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">req</span><span class="o">.</span><span class="na">getRequestDispatcher</span><span class="o">(</span><span class="n">PathConsts</span><span class="o">.</span><span class="na">PATH_PREFIX</span> <span class="o">+</span> <span class="n">PathConsts</span><span class="o">.</span><span class="na">LOGIN_PAGE</span><span class="o">).</span><span class="na">forward</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="n">req</span><span class="o">.</span><span class="na">getRequestDispatcher</span><span class="o">(</span><span class="n">PathConsts</span><span class="o">.</span><span class="na">PATH_PREFIX</span> <span class="o">+</span> <span class="n">PathConsts</span><span class="o">.</span><span class="na">MAIN_PAGE</span><span class="o">).</span><span class="na">forward</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">resp</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Windows查询被占用的端口</title><link>https://lewky.cn/posts/windows-netstat/</link><pubDate>Sat, 25 Dec 2021 00:26:15 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/windows-netstat/</guid><description><![CDATA[<h2 id="查询被占用的端口">查询被占用的端口</h2>
<p>假如被占用的是61613端口号（activemq的），在cmd窗口中执行如下命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cmd" data-lang="cmd">netstat -aon<span class="p">|</span>findstr <span class="s2">&#34;61613&#34;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>PostgreSQL - DML操作汇总</title><link>https://lewky.cn/posts/postgresql-dml/</link><pubDate>Tue, 07 Dec 2021 23:43:17 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/postgresql-dml/</guid><description><![CDATA[<h2 id="匿名函数">匿名函数</h2>
<h3 id="do关键字">DO关键字</h3>
<p>pl/pgsql即Procedural Language/ Postgres SQL(过程化sql语言)，是Postgresql数据库对sql语句的扩展，可以在pl/pgsql代码块内定义多条sql语句，每条语句以分号结束，代码块由begin开始，end结束，代码块的最后一个end可以不加分号。</p>]]></description></item><item><title>Git常用命令</title><link>https://lewky.cn/posts/git-commands/</link><pubDate>Tue, 02 Nov 2021 23:31:23 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/git-commands/</guid><description><![CDATA[<h2 id="git-clone">git clone</h2>
<p>克隆远程库到本地：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">// 默认本地仓库名字与远程库一样
git clone https://github.com/jquery/jquery.git

// 指定本地库名字为test
git clone https://github.com/jquery/jquery.git test

// git clone的仓库地址支持多种协议，通常使用最多的是http(s)和ssh协议，比如从GitHub上克隆仓库。
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>计算机网络基础</title><link>https://lewky.cn/posts/network/</link><pubDate>Thu, 14 Oct 2021 21:28:37 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/network/</guid><description><![CDATA[<h2 id="ip地址">IP地址</h2>
<p>IP地址由网络号（包括子网号）和主机号组成，网络号（包括子网号）相同意味着在同一网段下。在IPv4中，IP地址是一个32位的整数，对应4个字节，通常用x.x.x.x的点式十进制方式来表示。</p>
<p>**主机号为全0时，代表当前网络地址；主机号为全1时，代表当前网络的广播地址。**当向某个网络的广播地址发送消息时，该网络内的所有主机都能收到该广播消息。</p>]]></description></item><item><title>Java正则表达式问题汇总</title><link>https://lewky.cn/posts/java-regex-issues/</link><pubDate>Thu, 14 Oct 2021 21:26:47 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/java-regex-issues/</guid><description><![CDATA[<h2 id="正则表达式的模式修饰符">正则表达式的模式修饰符</h2>
<p>在正则表达式前面可以加上<code>(?i)</code>，<code>(?s)</code>和<code>(?m)</code>这三种模式修饰符，用以改变正则表达式的匹配模式。</p>
<p><code>(?i)</code>表示匹配时不区分大小写。</p>
<p><code>(?s)</code>表示Singleline（单行模式），匹配时会改变<code>.</code>的含义，使其能与换行符（\r或者\n，如果是\r\n需要用两个<code>.</code>）匹配。</p>
<p><code>(?m)</code>表示Multiline（多行模式），匹配时会改变<code>^</code>和<code>$</code>的含义，使其分别在任意一行的行首和行尾匹配，而不仅仅在整个字符串的开头和结尾匹配。</p>
<p>这三种模式修饰符可以搭配使用，如：<code>(?im)</code>，<code>(?is)</code>等。</p>]]></description></item><item><title>MySQL问题汇总</title><link>https://lewky.cn/posts/mysql-issues/</link><pubDate>Tue, 12 Oct 2021 00:04:01 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/mysql-issues/</guid><description><![CDATA[<h2 id="指定字符集编码">指定字符集编码</h2>
<p>需要在数据库连接中指定两个参数：<code>useUnicode=true&amp;characterEncoding=UTF-8</code>，只有当设置了<code>useUnicode=true</code>时，后续指定的字符集编码才有效。</p>
<h2 id="mysql-56别名默认不生效问题">MySQL 5.6别名默认不生效问题</h2>
<p>在数据库连接中指定参数：<code>useOldAliasMetadataBehavior=true</code>。</p>]]></description></item><item><title>Spring Data MongoDB问题汇总</title><link>https://lewky.cn/posts/spring-data-mongodb/</link><pubDate>Mon, 27 Sep 2021 23:27:22 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/spring-data-mongodb/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>Spring Data除了常用的JPA（Hibernate）关系型数据库的模块外，还有其他用于非关系型数据库的数据交互模块：比如Redis、MongoDB、Elasticsearch等。</p>
<p>用法和JPA模块类似，都需要定义对应的POJO、Repository，同时也提供了对应的数据库工具模板类：如RedisTemplate、MongoTemplate等。</p>
<p>本文基于以下版本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">&lt;!--  对应的是4.1.1版本的MongoDB --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-mongodb&lt;/artifactId&gt;
    &lt;version&gt;2.4.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre></td></tr></table>
</div>
</div><p>这是MongoDB官网用户手册的翻译文档仓库：<a href="https://github.com/mongodb-china/MongoDB-4.2-Manual" target="_blank" rel="noopener noreffer">MongoDB-4.2-Manual</a></p>]]></description></item><item><title>日志框架与门面模式</title><link>https://lewky.cn/posts/log-framework/</link><pubDate>Thu, 09 Sep 2021 23:44:02 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/log-framework/</guid><description><![CDATA[<h2 id="日志框架">日志框架</h2>
<p>目前的日志框架可以分为两种：一种是jdk自带的，一种是第三方实现的。</p>
<p>第三方的日志框架除了提供具体的日志实现外，也有的会提供自身框架的接口。此外，有些日志框架仅仅提供了一套统一的接口，不包含具体的日志实现，可以通过一些桥接包来调用其他的日志框架。（即日志的门面模式）</p>]]></description></item><item><title>ELK系列(4) - Elasticsearch问题汇总</title><link>https://lewky.cn/posts/elk-4/</link><pubDate>Wed, 08 Sep 2021 23:44:59 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/elk-4/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本文主要基于Elasticsearch 6.5.4版本：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">&lt;dependency&gt;
  &lt;groupId&gt;org.elasticsearch&lt;/groupId&gt;
  &lt;artifactId&gt;elasticsearch&lt;/artifactId&gt;
  &lt;version&gt;6.5.4&lt;/version&gt;
&lt;/dependency&gt;
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Hugo系列(3.3) - LoveIt主题美化与博客功能增强 · 第四章</title><link>https://lewky.cn/posts/hugo-3-3/</link><pubDate>Tue, 24 Aug 2021 15:11:16 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/hugo-3-3/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本博客使用的是Hugo的LoveIt主题，本文也是基于该主题而写的，不过Hugo的美化步骤应该大同小异，版本如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">hugo: v0.74.2/extended windows/amd64 BuildDate: unknown

LoveIt: v0.2.10
</code></pre></td></tr></table>
</div>
</div><p><strong>请注意，本文的所有功能都离不开两个新增加的文件：<code>_custom.scss</code>和<code>custom.js</code>，部分功能还需要<code>jquery</code>，在第一章中会提及如何引入。</strong></p>
<p>另外本文篇幅太长，阅读体验不好，将其进行分章如下：</p>
<ul>
<li><a href="/posts/hugo-3.html/" rel="">Hugo系列(3.0) - LoveIt主题美化与博客功能增强 · 第一章</a></li>
<li><a href="/posts/hugo-3.1.html/" rel="">Hugo系列(3.1) - LoveIt主题美化与博客功能增强 · 第二章</a></li>
<li><a href="/posts/hugo-3.2.html/" rel="">Hugo系列(3.2) - LoveIt主题美化与博客功能增强 · 第三章</a></li>
<li><a href="/posts/hugo-3-3/" rel="">Hugo系列(3.3) - LoveIt主题美化与博客功能增强 · 第四章</a></li>
</ul>]]></description></item><item><title>SpringBoot问题汇总</title><link>https://lewky.cn/posts/springboot-issues/</link><pubDate>Fri, 20 Aug 2021 08:23:26 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/springboot-issues/</guid><description><![CDATA[<h2 id="使用log4j2日志替代默认的logback">使用Log4j2日志替代默认的Logback</h2>
<p>SpringBoot默认使用Logback打印日志，出于性能考虑想要改用Log4j2，需要修改POM中的依赖，移除默认的Logback依赖：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
    &lt;exclusions&gt;
        &lt;exclusion&gt;
            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
            &lt;artifactId&gt;spring-boot-starter-logging&lt;/artifactId&gt;
        &lt;/exclusion&gt;
    &lt;/exclusions&gt;
&lt;/dependency&gt;
 
&lt;dependency&gt;
        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
        &lt;artifactId&gt;spring-boot-starter-log4j2&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>PowerMock问题汇总</title><link>https://lewky.cn/posts/powermock-issues/</link><pubDate>Tue, 10 Aug 2021 23:13:04 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/powermock-issues/</guid><description><![CDATA[<h2 id="powermock报错导致无法运行测试类">PowerMock报错导致无法运行测试类</h2>
<p>在执行单元测试时报错如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="n">ScriptEngineManager</span> <span class="n">providers</span><span class="o">.</span><span class="na">next</span><span class="o">():</span> <span class="n">javax</span><span class="o">.</span><span class="na">script</span><span class="o">.</span><span class="na">ScriptEngineFactory</span><span class="o">:</span> <span class="n">Provider</span> <span class="n">jdk</span><span class="o">.</span><span class="na">nashorn</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">scripting</span><span class="o">.</span><span class="na">NashornScriptEngineFactory</span> <span class="n">not</span> <span class="n">a</span> <span class="n">subtype</span>
</code></pre></td></tr></table>
</div>
</div><p>在Stack Overflow上找到了同样的错误，该报错是在使用了PowerMock框架后发生的，奇怪的是，某些同样使用该框架的测试类却不会报错，暂时不明白抛出该异常的根本原因，先记录下解决方法。</p>]]></description></item><item><title>Spring问题汇总</title><link>https://lewky.cn/posts/spring-issues/</link><pubDate>Mon, 09 Aug 2021 23:06:01 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/spring-issues/</guid><description><![CDATA[<h2 id="spelevaluationexception-el1030e">SpelEvaluationException: EL1030E</h2>
<p>运行Spring项目时报错如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">SpelEvaluationException</span><span class="o">:</span> <span class="n">EL1030E</span><span class="o">:</span> <span class="n">The</span> <span class="n">operator</span> <span class="err">&#39;</span><span class="n">ADD</span><span class="err">&#39;</span> <span class="n">is</span> <span class="n">not</span> <span class="n">supported</span> <span class="n">between</span> <span class="n">objects</span> <span class="n">of</span> <span class="n">type</span> <span class="err">&#39;</span><span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">String</span><span class="err">&#39;</span> <span class="n">and</span> <span class="err">&#39;</span><span class="kc">null</span><span class="err">&#39;</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ExpressionState</span><span class="o">.</span><span class="na">operate</span><span class="o">(</span><span class="n">ExpressionState</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">240</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ast</span><span class="o">.</span><span class="na">OpPlus</span><span class="o">.</span><span class="na">getValueInternal</span><span class="o">(</span><span class="n">OpPlus</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">80</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ast</span><span class="o">.</span><span class="na">OpPlus</span><span class="o">.</span><span class="na">getValueInternal</span><span class="o">(</span><span class="n">OpPlus</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">85</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ast</span><span class="o">.</span><span class="na">OpPlus</span><span class="o">.</span><span class="na">getValueInternal</span><span class="o">(</span><span class="n">OpPlus</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">83</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ast</span><span class="o">.</span><span class="na">OpPlus</span><span class="o">.</span><span class="na">getValueInternal</span><span class="o">(</span><span class="n">OpPlus</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">83</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ast</span><span class="o">.</span><span class="na">OpPlus</span><span class="o">.</span><span class="na">getValueInternal</span><span class="o">(</span><span class="n">OpPlus</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">83</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ast</span><span class="o">.</span><span class="na">OpPlus</span><span class="o">.</span><span class="na">getValueInternal</span><span class="o">(</span><span class="n">OpPlus</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">83</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">ast</span><span class="o">.</span><span class="na">SpelNodeImpl</span><span class="o">.</span><span class="na">getValue</span><span class="o">(</span><span class="n">SpelNodeImpl</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">109</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">expression</span><span class="o">.</span><span class="na">spel</span><span class="o">.</span><span class="na">standard</span><span class="o">.</span><span class="na">SpelExpression</span><span class="o">.</span><span class="na">getValue</span>
<span class="o">....</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">apache</span><span class="o">.</span><span class="na">tomcat</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">net</span><span class="o">.</span><span class="na">NioEndpoint$SocketProcessor</span><span class="o">.</span><span class="na">doRun</span><span class="o">(</span><span class="n">NioEndpoint</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">1415</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">apache</span><span class="o">.</span><span class="na">tomcat</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">net</span><span class="o">.</span><span class="na">SocketProcessorBase</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">SocketProcessorBase</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">49</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">concurrent</span><span class="o">.</span><span class="na">ThreadPoolExecutor</span><span class="o">.</span><span class="na">runWorker</span><span class="o">(</span><span class="n">ThreadPoolExecutor</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">1142</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">concurrent</span><span class="o">.</span><span class="na">ThreadPoolExecutor$Worker</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">ThreadPoolExecutor</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">617</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">apache</span><span class="o">.</span><span class="na">tomcat</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">threads</span><span class="o">.</span><span class="na">TaskThread$WrappingRunnable</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">TaskThread</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">61</span><span class="o">)</span>
	<span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">Thread</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="n">Thread</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="n">745</span><span class="o">)</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>iReport问题汇总</title><link>https://lewky.cn/posts/ireport-issues/</link><pubDate>Sun, 08 Aug 2021 21:46:08 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/ireport-issues/</guid><description>&lt;h2 id="ireport无法正常启动">iReport无法正常启动&lt;/h2>
&lt;p>最近需要用到iReport报表工具，但是在启动客户端时却发现会闪退，无法正常启动。查找了资料，发现是因为iReport无法支持jdk 1.8，必须要修改配置文件，将java版本指定为1.7或之前的版本。目前官网最新的版本是5.6.0，据说有外国大神说是下个版本将会支持jdk 1.8。&lt;/p></description></item><item><title>Log4j、Log4j2问题汇总</title><link>https://lewky.cn/posts/log4j2-issues/</link><pubDate>Sat, 07 Aug 2021 23:23:54 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/log4j2-issues/</guid><description><![CDATA[<h2 id="isdebugenabled的作用"><code>isDebugEnabled()</code>的作用</h2>
<p>查看公司项目的代码，发现在打印日志的时候会先进行一次判断，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="k">if</span> <span class="o">(</span><span class="n">LOGGER</span><span class="o">.</span><span class="na">isDebugEnabled</span><span class="o">())</span> <span class="o">{</span>
    <span class="n">LOGGER</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">&#34;Search parameters: &#34;</span> <span class="o">+</span> <span class="n">searchParams</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>IDEA问题汇总</title><link>https://lewky.cn/posts/idea-issues/</link><pubDate>Fri, 06 Aug 2021 22:41:57 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/idea-issues/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>本文基于2021-2版本的IDEA。</p>
<h2 id="启动时选择工作空间">启动时选择工作空间</h2>
<p><code>File</code> -&gt; <code>Settings...</code> -&gt; <code>Appearance &amp; Behavior</code> -&gt; <code>System Settings</code> -&gt; 不勾选<code>Reopen projects on startup</code></p>
<h2 id="无法搜索或者下载插件">无法搜索或者下载插件</h2>
<p><code>File</code> -&gt; <code>Settings...</code> -&gt; <code>Plugins</code>可以打开插件市场，搜索想要下载的插件，但是可能由于网络问题而无法成功搜索或者下载插件。此时需要设置代理来解决。</p>]]></description></item><item><title>博客园SimpleMemory皮肤定制化</title><link>https://lewky.cn/posts/cnblogs-skin/</link><pubDate>Thu, 05 Aug 2021 22:44:17 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/cnblogs-skin/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>博客园支持皮肤的高度定制化，本文主要简单介绍下博客园的SimpleMemory皮肤的定制化。感谢皮肤作者以及定制化皮肤的作者！</p>
<p>个人使用的是<code>BNDong</code>大大开源的基于SimpleMemory原皮的定制化皮肤，下面是相关的一些链接。</p>
<ul>
<li>项目地址：https://github.com/BNDong/Cnblogs-Theme-SimpleMemory</li>
<li>文档地址：https://bndong.github.io/Cnblogs-Theme-SimpleMemory/v2/#/</li>
<li>原作者：https://www.cnblogs.com/bndong/</li>
</ul>]]></description></item><item><title>npm问题汇总</title><link>https://lewky.cn/posts/npm-issues/</link><pubDate>Wed, 04 Aug 2021 22:51:39 +0800</pubDate><author>文章作者</author><guid>https://lewky.cn/posts/npm-issues/</guid><description><![CDATA[<h2 id="修改npm全局安装的路径">修改npm全局安装的路径</h2>
<p>在cmd输入命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cmd" data-lang="cmd">npm config set prefix <span class="s2">&#34;D:\software\nodejs\node_global&#34;</span>
npm config set cache <span class="s2">&#34;D:\software\nodejs\node_cache&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p>之后可以执行<code>npm config ls</code>来查看是否设置成功了。</p>
<p>为了方便全局安装的模块能通过命令行来运行，可以将上述设置的两个路径添加到环境变量<code>PATH</code>中。</p>]]></description></item></channel></rss>